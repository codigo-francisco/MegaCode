import com.badlogic.gdx.tools.texturepacker.TexturePacker

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.0'
        classpath "com.badlogicgames.gdx:gdx-tools:1.9.9-SNAPSHOT"
        classpath "io.realm:realm-gradle-plugin:5.4.1"
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "MegaCode"
        gdxVersion = '1.9.4'
        roboVMVersion = '1.8.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.6.0'
        aiVersion = '1.6.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":android") {
    apply plugin: "android"
    apply plugin: 'realm-android'


    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        implementation 'com.google.blockly.android:blocklylib-vertical:0.9-beta.20180725'
        implementation 'com.android.volley:volley:1.1.0'
        implementation 'com.weiwangcn.betterspinner:library-material:1.1.0'
        implementation 'com.squareup.moshi:moshi-kotlin:1.6.0'
        implementation 'com.squareup.retrofit2:retrofit:2.4.0'
        implementation 'com.squareup.retrofit2:converter-moshi:2.4.0'
        implementation 'de.hdodenhof:circleimageview:2.2.0'
        implementation 'org.jeasy:easy-rules-mvel:3.2.0'
        implementation 'org.jeasy:easy-rules-core:3.2.0'
        implementation 'org.jeasy:easy-rules-archetype:3.2.0'
        implementation 'org.jeasy:easy-rules-support:3.2.0'
        implementation 'org.jeasy:easy-rules-tutorials:3.2.0'
        implementation 'com.github.bumptech.glide:glide:4.8.0'
        annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

        implementation project(':OpenCV')
    }
}

project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"


    dependencies {
        implementation project(":core")
        implementation "org.robovm:robovm-rt:$roboVMVersion"
        implementation "org.robovm:robovm-cocoatouch:$roboVMVersion"
        implementation "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
    }
}

project(":core") {
    apply plugin: "java"

    dependencies {
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation ('com.googlecode.json-simple:json-simple:1.1.1') {
            exclude module: 'junit'
        }
    }

    task packTextures {
        def pack = new File("${rootProject.getRootDir()}/android/assets/images/gigagal.pack.png")
        def atlas = new File("${rootProject.getRootDir()}/android/assets/images/gigagal.pack.atlas")

        inputs.dir "${rootProject.getRootDir()}/core/rawAssets/sprites"
        outputs.file "${rootProject.getRootDir()}/android/assets/images/gigagal.pack.png"
        outputs.file "${rootProject.getRootDir()}/android/assets/images/gigagal.pack.atlas"

        doLast {
            pack.delete()
            atlas.delete()
            TexturePacker.process("${rootProject.getRootDir()}/core/rawAssets/sprites", "${rootProject.getRootDir()}/android/assets/images", "gigagal.pack")
        }
    }

    task copyLevels(type: Copy){
        from "../GigaGalLevels/scenes"
        into "../android/assets/levels"
        exclude "MainScene.dt"
    }

    project.tasks.compileJava.dependsOn packTextures
    project.tasks.compileJava.dependsOn copyLevels

}

tasks.eclipse.doLast {
    delete ".project"
}
